#BlueJ class context
comment0.target=GF2P
comment0.text=\ Polynomials\r\n\ \r\n\ Addition\ and\ subtraction\ are\ defined\ atypically,\ in\ terms\ of\ the\ binary\ representation\ of\ GF(2^8).\r\n\ They\ both\ are\ equivalent\ to\ a\ bitwise\ XOR.\ This\ means\ that\ modulo\ relies\ on\ XOR,\ not\ subtraction.\r\n\ (Explore\ long\ division\ of\ polynomials?)\r\n
comment1.params=len
comment1.target=GF2P[]\ zeroArray(int)
comment1.text=\r\n\ Constructs\ an\ array\ of\ zeros.\r\n
comment10.params=other
comment10.target=GF2P\ multiply(GF2P)
comment11.params=exp
comment11.target=GF2P\ pow(int)
comment12.params=divisor
comment12.target=GF2P\ divide(GF2P)
comment13.params=divisor
comment13.target=GF2P\ modulo(GF2P)
comment14.params=divisor
comment14.target=GF2P\ inverse(GF2P)
comment15.params=divisor
comment15.target=GF2P[]\ ediv(GF2P)
comment16.params=other
comment16.target=GF2P[]\ egcd(GF2P)
comment17.params=obj
comment17.target=boolean\ equals(java.lang.Object)
comment18.params=
comment18.target=java.lang.String\ toString()
comment19.params=
comment19.target=java.lang.String\ toHexString()
comment2.params=repr
comment2.target=void\ setStringRepresentation(GF2P.Representation)
comment20.params=
comment20.target=byte\ toByte()
comment3.params=cfs
comment3.target=GF2P(long)
comment4.params=cfs
comment4.target=GF2P(byte)
comment5.params=cfs
comment5.target=GF2P(java.util.BitSet)
comment6.params=
comment6.target=java.util.BitSet\ getCfs()
comment7.params=
comment7.target=int\ highestPower()
comment8.params=other
comment8.target=GF2P\ add(GF2P)
comment9.params=other
comment9.target=GF2P\ add(java.util.BitSet)
numComments=21
